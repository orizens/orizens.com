---
import { GoogleAnalytics } from '@astrolib/analytics';

// import ReloadPrompt from '@/components/ReloadPrompt.astro';
import { Footer } from '@/partials/Footer';
import { Navbar } from '@/partials/Navbar';
import { AppConfig } from '@/utils/AppConfig';

export interface Props {
  head: {
    title: string;
    description: string;
    og?: {
      image: string;
    }
  };
  empty?: boolean;
  bgColor?: string;
}

const {
  head: { title, description }, 
} = Astro.props as Props;
const isEmpty = Astro.props.empty;
const ogData = Astro.props?.head?.og;

// const bgColor = Astro.props?.bgColor ?? 'bg-slate-900';
const bgColor =
  Astro.props?.bgColor ??
  'bg-gradient-to-tr from-slate-900 via-gray-900 to-slate-800';
---

<html lang='en'>
  <head>
    <GoogleAnalytics id='G-203MX4DMNF' />
    <meta charset='UTF-8' />
    <meta name='viewport' content='width=device-width, initial-scale=1.0' />
    <title>{title}</title>
    <meta name='description' content={description} />
    <meta name='author' content={AppConfig.author} />

    <link rel='alternate' type='application/rss+xml' href='/rss.xml' />
    <link rel='icon' type='image/x-icon' href='/favicon.ico' />
    <link
      href='//fonts.googleapis.com/css?family=Open+Sans:300'
      rel='stylesheet'
      type='text/css'
    />
    {ogData && 
      <meta property="og:title" content={title} />
      <meta property="og:type" content="website">
      <meta property="og:description" content={description} />
      <meta property="og:image" content={ogData.image} />
      <meta name="twitter:card" content="summary_large_image">
      <meta property="twitter:domain" content="orizens.com">
      <meta name="twitter:title" content={title}>
      <meta name="twitter:description" content={description}>
      <meta name="twitter:image" content={ogData.image}>
    }
  </head>
  <body
    class={`${bgColor} text-gray-100`}
    data-lastupdate={new Date().toString()}
  >
    {!isEmpty && <Navbar />}

    <slot></slot>

    {!isEmpty && <Footer />}
    <script>
      if ('serviceWorker' in navigator) {
        navigator.serviceWorker
          .getRegistrations()
          .then(function (registrations) {
            for (let registration of registrations) {
              registration.unregister();
            }
          });
      }
    </script>
  </body>
</html>
